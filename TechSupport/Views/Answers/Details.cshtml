@using Microsoft.AspNet.Identity
@model TechSupport.Answer

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Answer</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.TimeCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TimeCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Text)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Text)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Answer1.Author)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Answer1.Author)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AspNetUser.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AspNetUser.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Question1.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Question1.Title)
        </dd>

    </dl>
</div>

<hr />

<h2>Answers</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Text)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Author)
        </th>
        <th>
            @Html.ActionLink("TimeCreated", "Details", new { id = Model.Id, sort = "time" })
        </th>
        <th>
            @Html.ActionLink("Likes", "Details", new { id = Model.Id, sort = "likes" })
        </th>
        <th>
            @Html.ActionLink("Dislikes", "Details", new { id = Model.Id, sort = "dislikes" })
        </th>
    </tr>
    @foreach (var item in Model.Answers1)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Text, "Details", "Answers", new { id = item.Id }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AspNetUser.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeCreated)
            </td>
            <td>
                @{
                    int likes = item.Ratings.Where(r => r.Likes.Equals(true)).Count();
                }
                @if (Request.IsAuthenticated)
                {
                    @Html.ActionLink("Like ", "CreateForAnswer", "Ratings", new { UserId = User.Identity.GetUserId(), AnswerId = item.Id, Likes = true, QuestionId = Model.Id }, null);
                }
                @Html.DisplayFor(modelItem => likes)
            </td>
            <td>
                @{
                    int dislikes = item.Ratings.Where(r => r.Likes.Equals(false)).Count();
                }
                @if (Request.IsAuthenticated)
                {
                    @Html.ActionLink("Dislike ", "CreateForAnswer", "Ratings", new { UserId = User.Identity.GetUserId(), AnswerId = item.Id, Likes = false, QuestionId = Model.Id }, null)
                }
                @Html.DisplayFor(modelItem => dislikes)
            </td>
            <td>
                @Html.ActionLink("Answer ", "Create", "Answers", new { ReplyOn = item.Id }, null)
                @if (User.IsInRole("admin"))
                {
                    @Html.ActionLink("Delete ", "Delete", "Answers", new { AnswerId = item.Id, QuestionId = Model.Id }, null)
                }
            </td>
        </tr>
    }
</table>
